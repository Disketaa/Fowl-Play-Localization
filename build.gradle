plugins {
    id 'maven-publish'
    id 'org.quiltmc.loom' version '1.+'
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    maven {
        name = "modrinth"
        url "https://api.modrinth.com/maven"
    }
    maven {
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
    }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Mappings
    mappings "org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:intermediary-v2"

    // Quilt Loader
    modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"

    // Quilted Fabric API
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_fabric_api_version}-${project.minecraft_version}"

    // Quilt Standard Libraries
    modImplementation "org.quiltmc:qsl:${project.qsl_version}+${project.minecraft_version}"

    // Debug Utils
    modRuntimeOnly("io.github.flemmli97:debugutils:${project.minecraft_version}-${project.debugutils_version}") {
        transitive = false
    }

    // Dev Tools
//    modRuntimeOnly("maven.modrinth:dev-tools-unlocker:${project.devtools_version}") {
//        transitive = false
//    }

    // Item Suggestions Not Require Mod Name
    modRuntimeOnly("maven.modrinth:isnrmn:${project.isnrmn_version}")

    // Mod Menu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        transitive = false
    }

    // MidnightLib
    modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}")
}

processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    // If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
    // Uncomment this line to generate them.
    // withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
    from('LICENSE.md') {
        rename { "${it}_${archivesBaseName}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
