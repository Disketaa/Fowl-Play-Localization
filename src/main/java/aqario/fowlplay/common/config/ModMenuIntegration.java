package aqario.fowlplay.common.config;

import com.terraformersmc.modmenu.api.ConfigScreenFactory;
import com.terraformersmc.modmenu.api.ModMenuApi;
import dev.isxander.yacl3.api.*;
import dev.isxander.yacl3.api.controller.BooleanControllerBuilder;
import dev.isxander.yacl3.api.controller.IntegerSliderControllerBuilder;
import net.minecraft.text.Text;

public class ModMenuIntegration implements ModMenuApi {
    @Override
    public ConfigScreenFactory<?> getModConfigScreenFactory() {
        return parent -> YetAnotherConfigLib.createBuilder()
            .title(Text.translatable("config.title"))
            .category(ConfigCategory.createBuilder()
                .name(Text.translatable("config.visual"))
                .option(Option.<Boolean>createBuilder()
                    .name(Text.translatable("config.visual.customChickenModel"))
                    .description(OptionDescription.of(Text.translatable("config.visual.customChickenModel.desc")))
                    .binding(true, () -> FowlPlayConfig.customChickenModel, newVal -> FowlPlayConfig.customChickenModel = newVal)
                    .controller(BooleanControllerBuilder::create)
                    .build()
                )
                .build()
            )
            .category(ConfigCategory.createBuilder()
                .name(Text.translatable("config.audio"))
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.blue_jay"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.blueJayCall, newVal -> FowlPlayConfig.blueJayCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.blueJaySong, newVal -> FowlPlayConfig.blueJaySong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.cardinal"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.cardinalCall, newVal -> FowlPlayConfig.cardinalCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.cardinalSong, newVal -> FowlPlayConfig.cardinalSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.chickadee"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.chickadeeCall, newVal -> FowlPlayConfig.chickadeeCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.chickadeeSong, newVal -> FowlPlayConfig.chickadeeSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.duck"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.duckCall, newVal -> FowlPlayConfig.duckCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.duckSong, newVal -> FowlPlayConfig.duckSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.gull"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.gullCall, newVal -> FowlPlayConfig.gullCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.gullSong, newVal -> FowlPlayConfig.gullSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.penguin"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.penguinCall, newVal -> FowlPlayConfig.penguinCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.penguinSong, newVal -> FowlPlayConfig.penguinSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.pigeon"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.pigeonCall, newVal -> FowlPlayConfig.pigeonCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.pigeonSong, newVal -> FowlPlayConfig.pigeonSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.raven"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.ravenCall, newVal -> FowlPlayConfig.ravenCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.ravenSong, newVal -> FowlPlayConfig.ravenSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.robin"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.robinCall, newVal -> FowlPlayConfig.robinCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.robinSong, newVal -> FowlPlayConfig.robinSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.sparrow"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.call"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.sparrowCall, newVal -> FowlPlayConfig.sparrowCall = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.audio.generic.song"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.sparrowSong, newVal -> FowlPlayConfig.sparrowSong = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 20)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .build()
            )
            .category(ConfigCategory.createBuilder()
                .name(Text.translatable("config.spawning"))
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.blue_jay"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(25, () -> FowlPlayConfig.blueJaySpawnWeight, newVal -> FowlPlayConfig.blueJaySpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(1, () -> FowlPlayConfig.blueJayMinGroupSize, newVal -> FowlPlayConfig.blueJayMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(2, () -> FowlPlayConfig.blueJayMaxGroupSize, newVal -> FowlPlayConfig.blueJayMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.cardinal"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(35, () -> FowlPlayConfig.cardinalSpawnWeight, newVal -> FowlPlayConfig.cardinalSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(1, () -> FowlPlayConfig.cardinalMinGroupSize, newVal -> FowlPlayConfig.cardinalMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(2, () -> FowlPlayConfig.cardinalMaxGroupSize, newVal -> FowlPlayConfig.cardinalMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.chickadee"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(50, () -> FowlPlayConfig.chickadeeSpawnWeight, newVal -> FowlPlayConfig.chickadeeSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(3, () -> FowlPlayConfig.chickadeeMinGroupSize, newVal -> FowlPlayConfig.chickadeeMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(5, () -> FowlPlayConfig.chickadeeMaxGroupSize, newVal -> FowlPlayConfig.chickadeeMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.duck"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(30, () -> FowlPlayConfig.duckSpawnWeight, newVal -> FowlPlayConfig.duckSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(6, () -> FowlPlayConfig.duckMinGroupSize, newVal -> FowlPlayConfig.duckMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(12, () -> FowlPlayConfig.duckMaxGroupSize, newVal -> FowlPlayConfig.duckMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.gull"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(30, () -> FowlPlayConfig.gullSpawnWeight, newVal -> FowlPlayConfig.gullSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(8, () -> FowlPlayConfig.gullMinGroupSize, newVal -> FowlPlayConfig.gullMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(12, () -> FowlPlayConfig.gullMaxGroupSize, newVal -> FowlPlayConfig.gullMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.penguin"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(1, () -> FowlPlayConfig.penguinSpawnWeight, newVal -> FowlPlayConfig.penguinSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(16, () -> FowlPlayConfig.penguinMinGroupSize, newVal -> FowlPlayConfig.penguinMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(24, () -> FowlPlayConfig.penguinMaxGroupSize, newVal -> FowlPlayConfig.penguinMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.pigeon"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(20, () -> FowlPlayConfig.pigeonSpawnWeight, newVal -> FowlPlayConfig.pigeonSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(4, () -> FowlPlayConfig.pigeonMinGroupSize, newVal -> FowlPlayConfig.pigeonMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(8, () -> FowlPlayConfig.pigeonMaxGroupSize, newVal -> FowlPlayConfig.pigeonMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.raven"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(20, () -> FowlPlayConfig.ravenSpawnWeight, newVal -> FowlPlayConfig.ravenSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(1, () -> FowlPlayConfig.ravenMinGroupSize, newVal -> FowlPlayConfig.ravenMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(3, () -> FowlPlayConfig.ravenMaxGroupSize, newVal -> FowlPlayConfig.ravenMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.robin"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(50, () -> FowlPlayConfig.robinSpawnWeight, newVal -> FowlPlayConfig.robinSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(3, () -> FowlPlayConfig.robinMinGroupSize, newVal -> FowlPlayConfig.robinMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(5, () -> FowlPlayConfig.robinMaxGroupSize, newVal -> FowlPlayConfig.robinMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .group(OptionGroup.createBuilder()
                    .name(Text.translatable("entity.fowlplay.sparrow"))
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.spawnWeight"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(75, () -> FowlPlayConfig.sparrowSpawnWeight, newVal -> FowlPlayConfig.sparrowSpawnWeight = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.minGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(6, () -> FowlPlayConfig.sparrowMinGroupSize, newVal -> FowlPlayConfig.sparrowMinGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .option(Option.<Integer>createBuilder()
                        .name(Text.translatable("config.spawning.generic.maxGroupSize"))
                        .description(OptionDescription.of(Text.translatable("config.audio.generic.desc")))
                        .binding(10, () -> FowlPlayConfig.sparrowMaxGroupSize, newVal -> FowlPlayConfig.sparrowMaxGroupSize = newVal)
                        .controller(option -> IntegerSliderControllerBuilder.create(option)
                            .range(0, 100)
                            .step(1)
                        )
                        .build()
                    )
                    .build()
                )
                .build()
            )
            .save(FowlPlayConfig.HANDLER::save)
            .build()
            .generateScreen(parent);
    }
}
